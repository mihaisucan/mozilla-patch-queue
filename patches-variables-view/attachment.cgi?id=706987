# HG changeset patch
# User Victor Porof <vporof@mozilla.com>
# Date 1359363957 -7200
# Node ID 8a22ba8d17750ed02803c56b86fefab42eef3120
# Parent  ccc3c17ec9afddc71c3a9787f60f67ae89e778c2
Bug 830759 - The close button in the Variables View (e.g. for watch expressions) should only be shown on hover, r=msucan

diff --git a/browser/devtools/debugger/debugger-panes.js b/browser/devtools/debugger/debugger-panes.js
--- a/browser/devtools/debugger/debugger-panes.js
+++ b/browser/devtools/debugger/debugger-panes.js
@@ -951,10 +951,8 @@ function WatchExpressionsView() {
   this._onClick = this._onClick.bind(this);
   this._onClose = this._onClose.bind(this);
   this._onBlur = this._onBlur.bind(this);
   this._onKeyPress = this._onKeyPress.bind(this);
-  this._onMouseOver = this._onMouseOver.bind(this);
-  this._onMouseOut = this._onMouseOut.bind(this);
 }
 
 create({ constructor: WatchExpressionsView, proto: MenuContainer.prototype }, {
   /**
@@ -1119,10 +1117,8 @@ create({ constructor: WatchExpressionsVi
 
     closeNode.addEventListener("click", this._onClose, false);
     inputNode.addEventListener("blur", this._onBlur, false);
     inputNode.addEventListener("keypress", this._onKeyPress, false);
-    aElementNode.addEventListener("mouseover", this._onMouseOver, false);
-    aElementNode.addEventListener("mouseout", this._onMouseOut, false);
 
     aElementNode.appendChild(arrowNode);
     aElementNode.appendChild(inputNode);
     aElementNode.appendChild(closeNode);
@@ -1199,12 +1195,9 @@ create({ constructor: WatchExpressionsVi
       this.removeExpressionAt(this._cache.indexOf(expressionItem));
     }
     // Expression is eligible.
     else {
-      // Save the watch expression code string.
       expressionItem.attachment.currentExpression = newExpression;
-      // Make sure the close button is hidden when the textbox is unfocused.
-      expressionItem.target.closeNode.hidden = true;
     }
 
     // Synchronize with the controller's watch expressions store.
     DebuggerController.StackFrames.syncWatchExpressions();
@@ -1223,22 +1216,8 @@ create({ constructor: WatchExpressionsVi
     }
   },
 
   /**
-   * The mouse over listener for a watch expression.
-   */
-  _onMouseOver: function DVWE__onMouseOver({ target: element }) {
-    this.getItemForElement(element).target.closeNode.hidden = false;
-  },
-
-  /**
-   * The mouse out listener for a watch expression.
-   */
-  _onMouseOut: function DVWE__onMouseOut({ target: element }) {
-    this.getItemForElement(element).target.closeNode.hidden = true;
-  },
-
-  /**
    * Gets an identifier for a new watch expression item in the current cache.
    * @return string
    */
   _generateId: (function() {
diff --git a/browser/themes/gnomestripe/devtools/debugger.css b/browser/themes/gnomestripe/devtools/debugger.css
--- a/browser/themes/gnomestripe/devtools/debugger.css
+++ b/browser/themes/gnomestripe/devtools/debugger.css
@@ -276,10 +276,19 @@
 .dbg-expression-input {
   font: 9pt monospace;
 }
 
-.dbg-expression-delete:not(:hover) {
+.dbg-expression-delete {
+  opacity: 0;
+}
+
+.dbg-expression-delete:hover {
+  opacity: 1;
+}
+
+.dbg-expression:hover > .dbg-expression-delete:not(:hover) {
   opacity: 0.5;
+  transition: opacity 0.2s ease-in-out;
 }
 
 /**
  * Variables view
@@ -289,10 +298,20 @@
   background-color: white;
   min-height: 10px;
 }
 
-.dbg-variable-delete:not(:hover) {
+.dbg-variable-delete {
+  opacity: 0;
+}
+
+.dbg-variable-delete:hover {
+  opacity: 1;
+}
+
+.variable:hover > .title > .dbg-variable-delete:not(:hover),
+.property:hover > .title > .dbg-variable-delete:not(:hover) {
   opacity: 0.5;
+  transition: opacity 0.2s ease-in-out;
 }
 
 .dbg-variable-edit {
   background: url("chrome://browser/skin/tabview/edit-light.png");
diff --git a/browser/themes/pinstripe/devtools/debugger.css b/browser/themes/pinstripe/devtools/debugger.css
--- a/browser/themes/pinstripe/devtools/debugger.css
+++ b/browser/themes/pinstripe/devtools/debugger.css
@@ -279,13 +279,22 @@
   font: 9pt monospace;
 }
 
 .dbg-expression-delete {
+  opacity: 0;
+}
+
+.dbg-expression-delete:not(:hover) {
   -moz-image-region: rect(0, 32px, 16px, 16px);
 }
 
-.dbg-expression-delete:not(:hover) {
+.dbg-expression-delete:hover {
+  opacity: 1;
+}
+
+.dbg-expression:hover > .dbg-expression-delete:not(:hover) {
   opacity: 0.5;
+  transition: opacity 0.2s ease-in-out;
 }
 
 /**
  * Variables view
@@ -295,11 +304,24 @@
   background-color: white;
   min-height: 10px;
 }
 
+.dbg-variable-delete {
+  opacity: 0;
+}
+
 .dbg-variable-delete:not(:hover) {
   -moz-image-region: rect(0, 32px, 16px, 16px);
+}
+
+.dbg-variable-delete:hover {
+  opacity: 1;
+}
+
+.variable:hover > .title > .dbg-variable-delete:not(:hover),
+.property:hover > .title > .dbg-variable-delete:not(:hover) {
   opacity: 0.5;
+  transition: opacity 0.2s ease-in-out;
 }
 
 .dbg-variable-edit {
   background: url("chrome://browser/skin/tabview/edit-light.png");
diff --git a/browser/themes/winstripe/devtools/debugger.css b/browser/themes/winstripe/devtools/debugger.css
--- a/browser/themes/winstripe/devtools/debugger.css
+++ b/browser/themes/winstripe/devtools/debugger.css
@@ -285,13 +285,22 @@
   font: 9pt monospace;
 }
 
 .dbg-expression-delete {
+  opacity: 0;
+}
+
+.dbg-expression-delete:not(:hover) {
   -moz-image-region: rect(0, 32px, 16px, 16px);
 }
 
-.dbg-expression-delete:not(:hover) {
+.dbg-expression-delete:hover {
+  opacity: 1;
+}
+
+.dbg-expression:hover > .dbg-expression-delete:not(:hover) {
   opacity: 0.5;
+  transition: opacity 0.2s ease-in-out;
 }
 
 /**
  * Variables view
@@ -301,11 +310,24 @@
   background-color: white;
   min-height: 10px;
 }
 
+.dbg-variable-delete {
+  opacity: 0;
+}
+
 .dbg-variable-delete:not(:hover) {
   -moz-image-region: rect(0, 32px, 16px, 16px);
+}
+
+.dbg-variable-delete:hover {
+  opacity: 1;
+}
+
+.variable:hover > .title > .dbg-variable-delete:not(:hover),
+.property:hover > .title > .dbg-variable-delete:not(:hover) {
   opacity: 0.5;
+  transition: opacity 0.2s ease-in-out;
 }
 
 .dbg-variable-edit {
   background: url("chrome://browser/skin/tabview/edit-light.png");
