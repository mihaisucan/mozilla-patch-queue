# HG changeset patch
# User Victor Porof <vporof@mozilla.com>
# Date 1359571912 -7200
# Node ID e875eb1fe1645912697261eb1687802c624b62c6
# Parent 89fa5224948e5ded3361b80fba94b24eb3d57448
Bug 830324 - Show a border around the textbox when editing values in the Variables View, r=msucan

diff --git a/browser/devtools/shared/VariablesView.jsm b/browser/devtools/shared/VariablesView.jsm
--- a/browser/devtools/shared/VariablesView.jsm
+++ b/browser/devtools/shared/VariablesView.jsm
@@ -6,16 +6,18 @@
 "use strict";
 
 const DBG_STRINGS_URI = "chrome://browser/locale/devtools/debugger.properties";
 const LAZY_EMPTY_DELAY = 150; // ms
 const LAZY_EXPAND_DELAY = 50; // ms
 const LAZY_APPEND_DELAY = 100; // ms
 const LAZY_APPEND_BATCH = 100; // nodes
 const SEARCH_ACTION_MAX_DELAY = 1000; // ms
+const ELEMENT_INPUT_DEFAULT_WIDTH = 100; // px
+const ELEMENT_INPUT_EXTRA_SPACE = 4; // px
 
 Components.utils.import("resource://gre/modules/Services.jsm");
 Components.utils.import("resource://gre/modules/XPCOMUtils.jsm");
 
 XPCOMUtils.defineLazyModuleGetter(this,
   "WebConsoleUtils", "resource://gre/modules/devtools/WebConsoleUtils.jsm");
 
 this.EXPORTED_SYMBOLS = ["VariablesView", "create"];
@@ -1233,17 +1235,20 @@ Scope.prototype = {
    */
   _addEventListeners: function S__addEventListeners() {
     this._title.addEventListener("mousedown", this._onClick, false);
   },
 
   /**
    * The click listener for this scope's title.
    */
-  _onClick: function S__onClick() {
+  _onClick: function S__onClick(e) {
+    if (e.target == this._inputNode) {
+      return;
+    }
     this.toggle();
     this._target.focus();
   },
 
   /**
    * Lazily appends a node to this scope's enumerable or non-enumerable
    * container. Once a certain number of nodes have been batched, they
    * will be appended.
@@ -2021,18 +2026,24 @@ create({ constructor: Variable, proto: S
   _activateInput: function V__activateInput(aLabel, aClassName, aCallbacks) {
     let initialString = aLabel.getAttribute("value");
 
     // Create a texbox input element which will be shown in the current
     // element's specified label location.
     let input = this.document.createElement("textbox");
     input.setAttribute("value", initialString);
     input.className = "plain " + aClassName;
-    input.width = this._target.clientWidth;
 
+    // Can't use clientWidth because labels may have extra unnecessary padding.
+    let style = this.window.getComputedStyle(aLabel);
+    input.width = (parseInt(style.getPropertyValue("width")) ||
+      ELEMENT_INPUT_DEFAULT_WIDTH) + // No content previously available.
+      ELEMENT_INPUT_EXTRA_SPACE; // Extra space added for editing.
+
+    // Replace the specified label with a textbox input element.
     aLabel.parentNode.replaceChild(input, aLabel);
     input.select();
 
     // When the value is a string (displayed as "value"), then we probably want
     // to change it to another string in the textbox, so to avoid typing the ""
     // again, tackle with the selection bounds just a bit.
     if (aLabel.getAttribute("value").match(/^"[^"]*"$/)) {
       input.selectionEnd--;
@@ -2043,16 +2054,17 @@ create({ constructor: Variable, proto: S
     input.addEventListener("blur", aCallbacks.onBlur, false);
 
     this._prevExpandable = this.twisty;
     this._prevExpanded = this.expanded;
     this.collapse();
     this.hideArrow();
     this._locked = true;
 
+    this._inputNode = input;
     this._stopThrobber();
   },
 
   /**
    * Removes the textbox node in place of a label.
    *
    * @param nsIDOMNode aLabel
    *        The label which was replaced with a textbox.
@@ -2063,16 +2075,17 @@ create({ constructor: Variable, proto: S
     aInput.parentNode.replaceChild(aLabel, aInput);
     aInput.removeEventListener("keypress", aCallbacks.onKeypress, false);
     aInput.removeEventListener("blur", aCallbacks.onBlur, false);
 
     this._locked = false;
     this.twisty = this._prevExpandable;
     this.expanded = this._prevExpanded;
 
+    this._inputNode = null;
     this._stopThrobber();
   },
 
   /**
    * Makes this variable's name editable.
    */
   _activateNameInput: function V__activateNameInput(e) {
     if (e && e.button != 0) {
@@ -2253,16 +2266,17 @@ create({ constructor: Variable, proto: S
     }
   },
 
   _symbolicName: "",
   _absoluteName: "",
   _initialDescriptor: null,
   _separatorLabel: null,
   _valueLabel: null,
+  _inputNode: null,
   _editNode: null,
   _deleteNode: null,
   _tooltip: null,
   _valueGrip: null,
   _valueString: "",
   _valueClassName: "",
   _prevExpandable: false,
   _prevExpanded: false
diff --git a/browser/themes/gnomestripe/devtools/debugger.css b/browser/themes/gnomestripe/devtools/debugger.css
--- a/browser/themes/gnomestripe/devtools/debugger.css
+++ b/browser/themes/gnomestripe/devtools/debugger.css
@@ -347,17 +347,16 @@
 /**
  * Variable element
  */
 
 .variable {
   -moz-margin-start: 1px;
   -moz-margin-end: 1px;
   border-bottom: 1px solid #eee;
-  background: #fff;
   transition: background 1s ease-in-out;
 }
 
 .variable[changed] {
   background: rgba(255, 255, 0, 0.65);
   transition-duration: 0.4s;
 }
 
@@ -385,17 +384,16 @@
   -moz-margin-start: 10px;
 }
 
 /**
  * Property element
  */
 
 .property {
-  background: #fff;
   transition: background 1s ease-in-out;
 }
 
 .property[changed] {
   background: rgba(255, 255, 0, 0.65);
   transition-duration: 0.4s;
 }
 
@@ -477,28 +475,33 @@
 .property[non-writable] > tooltip > label[value="writable"] {
   text-decoration: line-through;
 }
 
 /**
  * Variables and properties editing
  */
 
-#variables .element-value-input {
-  overflow: hidden;
-  max-width: 30em;
-  -moz-margin-start: 5px !important;
+.element-value-input {
+  -moz-margin-start: 4px !important;
 }
 
-#variables .element-name-input {
-  -moz-margin-start: -1px !important;
+.element-name-input {
+  -moz-margin-start: -2px !important;
   color: #048;
   font-weight: 600;
 }
 
+.element-value-input,
+.element-name-input {
+  max-width: 30em;
+  border: 1px solid #999 !important;
+  box-shadow: 1px 2px 4px #aaa;
+}
+
 /**
  * Variables and properties searching
  */
 
 .variables-searchinput.devtools-searchinput {
   min-height: 24px;
 }
 
diff --git a/browser/themes/pinstripe/devtools/debugger.css b/browser/themes/pinstripe/devtools/debugger.css
--- a/browser/themes/pinstripe/devtools/debugger.css
+++ b/browser/themes/pinstripe/devtools/debugger.css
@@ -357,17 +357,16 @@
 /**
  * Variable element
  */
 
 .variable {
   -moz-margin-start: 1px;
   -moz-margin-end: 1px;
   border-bottom: 1px solid #eee;
-  background: #fff;
   transition: background 1s ease-in-out;
 }
 
 .variable[changed] {
   background: rgba(255, 255, 0, 0.65);
   transition-duration: 0.4s;
 }
 
@@ -395,17 +394,16 @@
   -moz-margin-start: 10px;
 }
 
 /**
  * Property element
  */
 
 .property {
-  background: #fff;
   transition: background 1s ease-in-out;
 }
 
 .property[changed] {
   background: rgba(255, 255, 0, 0.65);
   transition-duration: 0.4s;
 }
 
@@ -487,28 +485,33 @@
 .property[non-writable] > tooltip > label[value="writable"] {
   text-decoration: line-through;
 }
 
 /**
  * Variables and properties editing
  */
 
-#variables .element-value-input {
-  overflow: hidden;
-  max-width: 30em;
-  -moz-margin-start: 5px !important;
+.element-value-input {
+  -moz-margin-start: 4px !important;
 }
 
-#variables .element-name-input {
-  -moz-margin-start: -1px !important;
+.element-name-input {
+  -moz-margin-start: -2px !important;
   color: #048;
   font-weight: 600;
 }
 
+.element-value-input,
+.element-name-input {
+  max-width: 30em;
+  border: 1px solid #999 !important;
+  box-shadow: 1px 2px 4px #aaa;
+}
+
 /**
  * Variables and properties searching
  */
 
 .variables-searchinput.devtools-searchinput {
   min-height: 24px;
 }
 
diff --git a/browser/themes/winstripe/devtools/debugger.css b/browser/themes/winstripe/devtools/debugger.css
--- a/browser/themes/winstripe/devtools/debugger.css
+++ b/browser/themes/winstripe/devtools/debugger.css
@@ -363,17 +363,16 @@
 /**
  * Variable element
  */
 
 .variable {
   -moz-margin-start: 1px;
   -moz-margin-end: 1px;
   border-bottom: 1px solid #eee;
-  background: #fff;
   transition: background 1s ease-in-out;
 }
 
 .variable[changed] {
   background: rgba(255, 255, 0, 0.65);
   transition-duration: 0.4s;
 }
 
@@ -401,17 +400,16 @@
   -moz-margin-start: 10px;
 }
 
 /**
  * Property element
  */
 
 .property {
-  background: #fff;
   transition: background 1s ease-in-out;
 }
 
 .property[changed] {
   background: rgba(255, 255, 0, 0.65);
   transition-duration: 0.4s;
 }
 
@@ -493,28 +491,33 @@
 .property[non-writable] > tooltip > label[value="writable"] {
   text-decoration: line-through;
 }
 
 /**
  * Variables and properties editing
  */
 
-#variables .element-value-input {
-  overflow: hidden;
-  max-width: 30em;
-  -moz-margin-start: 5px !important;
+.element-value-input {
+  -moz-margin-start: 4px !important;
 }
 
-#variables .element-name-input {
-  -moz-margin-start: -1px !important;
+.element-name-input {
+  -moz-margin-start: -2px !important;
   color: #048;
   font-weight: 600;
 }
 
+.element-value-input,
+.element-name-input {
+  max-width: 30em;
+  border: 1px solid #999 !important;
+  box-shadow: 1px 2px 4px #aaa;
+}
+
 /**
  * Variables and properties searching
  */
 
 .variables-searchinput.devtools-searchinput {
   min-height: 24px;
 }
 
