# HG changeset patch
# Parent e42cc35e45cc57d4984b8530ede60cf696dbebe6
# User Sankha Narayan Guria <sankha93@gmail.com>
Bug 764545 - WebConsole default position should be "below"; r=msucan; try: -b do -p linux,linuxqt,linux64,macosx64,win32,macosx -u mochitest-o -t none

diff --git a/browser/app/profile/firefox.js b/browser/app/profile/firefox.js
--- a/browser/app/profile/firefox.js
+++ b/browser/app/profile/firefox.js
@@ -1093,17 +1093,17 @@ pref("devtools.gcli.allowSet", false);
 // Console will use the default height next time it shows.
 // Change to -1 if you do not want the Web Console to remember its last height.
 pref("devtools.hud.height", 0);
 
 // Remember the Web Console position. Possible values:
 //   above - above the web page,
 //   below - below the web page,
 //   window - in a separate window/popup panel.
-pref("devtools.webconsole.position", "above");
+pref("devtools.webconsole.position", "below");
 
 // Remember the Web Console filters
 pref("devtools.webconsole.filter.network", true);
 pref("devtools.webconsole.filter.networkinfo", true);
 pref("devtools.webconsole.filter.csserror", true);
 pref("devtools.webconsole.filter.cssparser", true);
 pref("devtools.webconsole.filter.exception", true);
 pref("devtools.webconsole.filter.jswarn", true);
diff --git a/browser/devtools/webconsole/test/browser_webconsole_bug_618311_close_panels.js b/browser/devtools/webconsole/test/browser_webconsole_bug_618311_close_panels.js
--- a/browser/devtools/webconsole/test/browser_webconsole_bug_618311_close_panels.js
+++ b/browser/devtools/webconsole/test/browser_webconsole_bug_618311_close_panels.js
@@ -94,14 +94,18 @@ function performTest() {
     name: "jsterm output message",
     validatorFn: function()
     {
       return HUD.outputNode.querySelector(".webconsole-msg-output");
     },
     successFn: function()
     {
       let jstermMessage = HUD.outputNode.querySelector(".webconsole-msg-output");
-      EventUtils.synthesizeMouse(jstermMessage, 2, 2, {});
-      EventUtils.synthesizeMouse(networkLink, 2, 2, {});
+      EventUtils.sendMouseEvent({ type: "mousedown" }, jstermMessage);
+      EventUtils.sendMouseEvent({ type: "mouseup" }, jstermMessage);
+      EventUtils.sendMouseEvent({ type: "click" }, jstermMessage);
+      EventUtils.sendMouseEvent({ type: "mousedown" }, networkLink);
+      EventUtils.sendMouseEvent({ type: "mouseup" }, networkLink);
+      EventUtils.sendMouseEvent({ type: "click" }, networkLink);
     },
     failureFn: finishTest,
   });
 }
diff --git a/browser/devtools/webconsole/test/browser_webconsole_bug_618311_private_browsing.js b/browser/devtools/webconsole/test/browser_webconsole_bug_618311_private_browsing.js
--- a/browser/devtools/webconsole/test/browser_webconsole_bug_618311_private_browsing.js
+++ b/browser/devtools/webconsole/test/browser_webconsole_bug_618311_private_browsing.js
@@ -119,18 +119,22 @@ function performTest() {
     name: "jsterm output message",
     validatorFn: function()
     {
       return HUD.outputNode.querySelector(".webconsole-msg-output");
     },
     successFn: function()
     {
       let jstermMessage = HUD.outputNode.querySelector(".webconsole-msg-output");
-      EventUtils.synthesizeMouse(jstermMessage, 2, 2, {});
-      EventUtils.synthesizeMouse(networkLink, 2, 2, {});
+      EventUtils.sendMouseEvent({ type: "mousedown" }, jstermMessage);
+      EventUtils.sendMouseEvent({ type: "mouseup" }, jstermMessage);
+      EventUtils.sendMouseEvent({ type: "click" }, jstermMessage);
+      EventUtils.sendMouseEvent({ type: "mousedown" }, networkLink);
+      EventUtils.sendMouseEvent({ type: "mouseup" }, networkLink);
+      EventUtils.sendMouseEvent({ type: "click" }, networkLink);
     },
     failureFn: finishTest,
   });
 }
 
 function togglePBAndThen(callback) {
   function pbObserver(aSubject, aTopic, aData) {
     if (aTopic != "private-browsing-transition-complete") {
diff --git a/browser/devtools/webconsole/test/browser_webconsole_position_ui.js b/browser/devtools/webconsole/test/browser_webconsole_position_ui.js
--- a/browser/devtools/webconsole/test/browser_webconsole_position_ui.js
+++ b/browser/devtools/webconsole/test/browser_webconsole_position_ui.js
@@ -30,31 +30,31 @@ function onLoad() {
   openConsole();
 
   testMenuitems();
 
   let hudId = HUDService.getHudIdByWindow(content);
   let hudRef = HUDService.hudReferences[hudId];
   let hudBox = hudRef.HUDBox;
 
-  is(hudBox.parentNode.childNodes[0].getAttribute("id"), hudId,
+  is(hudBox.parentNode.childNodes[2].getAttribute("id"), hudId,
      "initial console position is correct");
 
+  is(hudRef.positionMenuitems.below.getAttribute("checked"), "true",
+     "position menu checkbox is below");
+  is(Services.prefs.getCharPref(POSITION_PREF), "below", "pref is below");
+
+  hudRef.positionConsole("above");
+  let id = hudBox.parentNode.childNodes[0].getAttribute("id");
+  is(id, hudId, "above position is correct");
+
   is(hudRef.positionMenuitems.above.getAttribute("checked"), "true",
      "position menu checkbox is above");
   is(Services.prefs.getCharPref(POSITION_PREF), "above", "pref is above");
 
-  hudRef.positionConsole("below");
-  let id = hudBox.parentNode.childNodes[2].getAttribute("id");
-  is(id, hudId, "below position is correct");
-
-  is(hudRef.positionMenuitems.below.getAttribute("checked"), "true",
-     "position menu checkbox is below");
-  is(Services.prefs.getCharPref(POSITION_PREF), "below", "pref is below");
-
   // listen for the panel popupshown event.
   document.addEventListener("popupshown", function popupShown() {
     document.removeEventListener("popupshown", popupShown, false);
 
     document.addEventListener("popuphidden", function popupHidden() {
       document.removeEventListener("popuphidden", popupHidden, false);
 
       id = hudBox.parentNode.childNodes[2].getAttribute("id");
