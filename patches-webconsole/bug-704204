diff --git a/browser/app/profile/firefox.js b/browser/app/profile/firefox.js
--- a/browser/app/profile/firefox.js
+++ b/browser/app/profile/firefox.js
@@ -1088,16 +1088,19 @@ pref("devtools.webconsole.filter.csserro
 pref("devtools.webconsole.filter.cssparser", true);
 pref("devtools.webconsole.filter.exception", true);
 pref("devtools.webconsole.filter.jswarn", true);
 pref("devtools.webconsole.filter.error", true);
 pref("devtools.webconsole.filter.warn", true);
 pref("devtools.webconsole.filter.info", true);
 pref("devtools.webconsole.filter.log", true);
 
+// Text size in the Web Console. Use 0 for the system default size.
+pref("devtools.webconsole.fontSize", 0);
+
 // The number of lines that are displayed in the web console for the Net,
 // CSS, JS and Web Developer categories.
 pref("devtools.hud.loglimit.network", 200);
 pref("devtools.hud.loglimit.cssparser", 200);
 pref("devtools.hud.loglimit.exception", 200);
 pref("devtools.hud.loglimit.console", 200);
 
 // The developer tools editor configuration:
diff --git a/browser/devtools/webconsole/test/Makefile.in b/browser/devtools/webconsole/test/Makefile.in
--- a/browser/devtools/webconsole/test/Makefile.in
+++ b/browser/devtools/webconsole/test/Makefile.in
@@ -19,16 +19,17 @@ MOCHITEST_BROWSER_FILES = \
 	browser_webconsole_bug_580001_closing_after_completion.js \
 	browser_webconsole_bug_580400_groups.js \
 	browser_webconsole_bug_588730_text_node_insertion.js \
 	browser_webconsole_bug_601667_filter_buttons.js \
 	browser_webconsole_bug_597136_external_script_errors.js \
 	browser_webconsole_bug_597136_network_requests_from_chrome.js \
 	browser_webconsole_completion.js \
 	browser_webconsole_console_logging_api.js \
+	browser_webconsole_change_font_size.js \
 	browser_webconsole_chrome.js \
 	browser_webconsole_execution_scope.js \
 	browser_webconsole_for_of.js \
 	browser_webconsole_history.js \
 	browser_webconsole_js_input_and_output_styling.js \
 	browser_webconsole_js_input_expansion.js \
 	browser_webconsole_live_filtering_of_message_types.js \
 	browser_webconsole_live_filtering_on_search_strings.js \
diff --git a/browser/devtools/webconsole/test/browser_webconsole_change_font_size.js b/browser/devtools/webconsole/test/browser_webconsole_change_font_size.js
new file mode 100644
--- /dev/null
+++ b/browser/devtools/webconsole/test/browser_webconsole_change_font_size.js
@@ -0,0 +1,44 @@
+/* vim:set ts=2 sw=2 sts=2 et: */
+/* ***** BEGIN LICENSE BLOCK *****
+ * Any copyright is dedicated to the Public Domain.
+ * http://creativecommons.org/publicdomain/zero/1.0/
+ *
+ * Contributor(s):
+ *  Jennifer Fong <jfong@mozilla.com>
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+const TEST_URI = "http://example.com/";
+
+function test() {
+  addTab(TEST_URI);
+  browser.addEventListener("load", function onLoad() {
+    browser.removeEventListener("load", onLoad, true);
+    Services.prefs.setIntPref("devtools.webconsole.fontSize", 10);
+    openConsole(null, testFontSizeChange);
+  }, true);
+}
+
+function testFontSizeChange(hud) {
+  let inputNode = hud.jsterm.inputNode;
+  let outputNode = hud.jsterm.outputNode;
+  outputNode.focus();
+
+  EventUtils.synthesizeKey("-", { accelKey: true });
+  is(inputNode.style.fontSize, "10px", "input font stays at same size with ctrl+-");
+  is(outputNode.style.fontSize, inputNode.style.fontSize, "output font stays at same size with ctrl+-");
+
+  EventUtils.synthesizeKey("=", { accelKey: true });
+  is(inputNode.style.fontSize, "11px", "input font increased with ctrl+=");
+  is(outputNode.style.fontSize, inputNode.style.fontSize, "output font stays at same size with ctrl+=");
+
+  EventUtils.synthesizeKey("-", { accelKey: true });
+  is(inputNode.style.fontSize, "10px", "font decreased with ctrl+-");
+  is(outputNode.style.fontSize, inputNode.style.fontSize, "output font stays at same size with ctrl+-");
+
+  EventUtils.synthesizeKey("0", { accelKey: true });
+  is(inputNode.style.fontSize, "", "font reset with ctrl+0");
+  is(outputNode.style.fontSize, inputNode.style.fontSize, "output font stays at same size with ctrl+0");
+
+  finishTest();
+}
diff --git a/browser/devtools/webconsole/webconsole.js b/browser/devtools/webconsole/webconsole.js
--- a/browser/devtools/webconsole/webconsole.js
+++ b/browser/devtools/webconsole/webconsole.js
@@ -147,16 +147,19 @@ const OUTPUT_INTERVAL = 50; // milliseco
 // When the output queue has more than MESSAGES_IN_INTERVAL items we throttle
 // output updates to this number of milliseconds. So during a lot of output we
 // update every N milliseconds given here.
 const THROTTLE_UPDATES = 1000; // milliseconds
 
 // The preference prefix for all of the Web Console filters.
 const FILTER_PREFS_PREFIX = "devtools.webconsole.filter.";
 
+// The minimum font size.
+const MIN_FONT_SIZE = 10;
+
 /**
  * A WebConsoleFrame instance is an interactive console initialized *per tab*
  * that displays console log data as well as provides an interactive terminal to
  * manipulate the current tab's document content.
  *
  * The WebConsoleFrame is responsible for the actual Web Console UI
  * implementation.
  *
@@ -313,21 +316,33 @@ WebConsoleFrame.prototype = {
    * @private
    */
   _initUI: function WCF__initUI()
   {
     let doc = this.document;
 
     this.filterBox = doc.querySelector(".hud-filter-box");
     this.outputNode = doc.querySelector(".hud-output-node");
+    this.completeNode = doc.querySelector(".jsterm-complete-node");
+    this.inputNode = doc.querySelector(".jsterm-input-node");
 
     this._setFilterTextBoxEvents();
     this._initPositionUI();
     this._initFilterButtons();
 
+    let fontSize = Services.prefs.getIntPref("devtools.webconsole.fontSize");
+
+    if (fontSize != 0) {
+      fontSize = Math.max(MIN_FONT_SIZE, fontSize);
+
+      this.outputNode.style.fontSize = fontSize + "px";
+      this.completeNode.style.fontSize = fontSize + "px";
+      this.inputNode.style.fontSize = fontSize + "px";
+    }
+
     let saveBodies = doc.getElementById("saveBodies");
     saveBodies.addEventListener("command", function() {
       this.saveRequestAndResponseBodies = !this.saveRequestAndResponseBodies;
     }.bind(this));
     saveBodies.setAttribute("checked", this.saveRequestAndResponseBodies);
 
     let contextMenuId = this.outputNode.getAttribute("context");
     let contextMenu = doc.getElementById(contextMenuId);
@@ -507,16 +522,62 @@ WebConsoleFrame.prototype = {
       parentNode.replaceChild(oldOutputNode, this.outputNode);
       this.outputNode = oldOutputNode;
     }
 
     this.jsterm && this.jsterm.inputNode.focus();
   },
 
   /**
+   * Increase, decrease or reset the font size.
+   *
+   * @param string size
+   *        The size of the font change. Accepted values are "+" and "-".
+   *        An unmatched size assumes a font reset.
+   */
+  changeFontSize: function WCF_changeFontSize(aSize)
+  {
+    let fontSize = this.window
+                   .getComputedStyle(this.outputNode, null)
+                   .getPropertyValue("font-size").replace("px", "");
+
+    if (this.outputNode.style.fontSize) {
+      fontSize = this.outputNode.style.fontSize.replace("px", "");
+    }
+
+    if (aSize == "+" || aSize == "-") {
+      fontSize = parseInt(fontSize, 10);
+
+      if (aSize == "+") {
+        fontSize += 1;
+      }
+      else {
+        fontSize -= 1;
+      }
+
+      if (fontSize < MIN_FONT_SIZE) {
+        fontSize = MIN_FONT_SIZE;
+      }
+
+      Services.prefs.setIntPref("devtools.webconsole.fontSize", fontSize);
+      fontSize = fontSize + "px";
+
+      this.completeNode.style.fontSize = fontSize;
+      this.inputNode.style.fontSize = fontSize;
+      this.outputNode.style.fontSize = fontSize;
+    }
+    else {
+      this.completeNode.style.fontSize = "";
+      this.inputNode.style.fontSize = "";
+      this.outputNode.style.fontSize = "";
+      Services.prefs.clearUserPref("devtools.webconsole.fontSize");
+    }
+  },
+
+  /**
    * Handler for all of the messages coming from the Web Console content script.
    *
    * @private
    * @param object aMessage
    *        A MessageManager object that holds the remote message.
    */
   receiveMessage: function WCF_receiveMessage(aMessage)
   {
@@ -3358,30 +3419,42 @@ CommandController.prototype = {
   },
 
   isCommandEnabled: function CommandController_isCommandEnabled(aCommand)
   {
     switch (aCommand) {
       case "cmd_copy":
         // Only enable "copy" if nodes are selected.
         return this.owner.outputNode.selectedCount > 0;
+      case "cmd_fontSizeEnlarge":
+      case "cmd_fontSizeReduce":
+      case "cmd_fontSizeReset":
       case "cmd_selectAll":
         return true;
     }
   },
 
   doCommand: function CommandController_doCommand(aCommand)
   {
     switch (aCommand) {
       case "cmd_copy":
         this.copy();
         break;
       case "cmd_selectAll":
         this.selectAll();
         break;
+      case "cmd_fontSizeEnlarge":
+        this.owner.changeFontSize("+");
+        break;
+      case "cmd_fontSizeReduce":
+        this.owner.changeFontSize("-");
+        break;
+      case "cmd_fontSizeReset":
+        this.owner.changeFontSize("");
+        break;
     }
   }
 };
 
 function gSequenceId()
 {
   return gSequenceId.n++;
 }
diff --git a/browser/devtools/webconsole/webconsole.xul b/browser/devtools/webconsole/webconsole.xul
--- a/browser/devtools/webconsole/webconsole.xul
+++ b/browser/devtools/webconsole/webconsole.xul
@@ -13,16 +13,31 @@
 <window xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
         title="&window.title;"
         windowtype="devtools:webconsole"
         persist="screenX screenY width height sizemode">
   <script type="text/javascript" src="chrome://global/content/globalOverlay.js"/>
   <script type="text/javascript" src="webconsole.js"/>
 
   <commandset id="editMenuCommands"/>
+
+  <commandset>
+    <command id="cmd_fullZoomEnlarge" oncommand="goDoCommand('cmd_fontSizeEnlarge');"/>
+    <command id="cmd_fullZoomReduce" oncommand="goDoCommand('cmd_fontSizeReduce');"/>
+    <command id="cmd_fullZoomReset" oncommand="goDoCommand('cmd_fontSizeReset');"/>
+  </commandset>
+  <keyset id="fontSizeChangeSet">
+    <key id="key_fullZoomReduce"  key="&fullZoomReduceCmd.commandkey;" command="cmd_fullZoomReduce"  modifiers="accel"/>
+    <key key="&fullZoomReduceCmd.commandkey2;"  command="cmd_fullZoomReduce" modifiers="accel"/>
+    <key id="key_fullZoomEnlarge" key="&fullZoomEnlargeCmd.commandkey;" command="cmd_fullZoomEnlarge" modifiers="accel"/>
+    <key key="&fullZoomEnlargeCmd.commandkey2;" command="cmd_fullZoomEnlarge" modifiers="accel"/>
+    <key key="&fullZoomEnlargeCmd.commandkey3;" command="cmd_fullZoomEnlarge" modifiers="accel"/>
+    <key id="key_fullZoomReset" key="&fullZoomResetCmd.commandkey;" command="cmd_fullZoomReset" modifiers="accel"/>
+    <key key="&fullZoomResetCmd.commandkey2;" command="cmd_fullZoomReset" modifiers="accel"/>
+  </keyset>
   <keyset id="editMenuKeys"/>
 
   <popupset id="mainPopupSet">
     <menupopup id="output-contextmenu">
       <menuitem id="saveBodies" type="checkbox" label="&saveBodies.label;"
                 accesskey="&saveBodies.accesskey;"/>
       <menuitem id="menu_copy"/>
       <menuitem id="menu_selectAll"/>
diff --git a/browser/locales/en-US/chrome/browser/devtools/webConsole.dtd b/browser/locales/en-US/chrome/browser/devtools/webConsole.dtd
--- a/browser/locales/en-US/chrome/browser/devtools/webConsole.dtd
+++ b/browser/locales/en-US/chrome/browser/devtools/webConsole.dtd
@@ -73,8 +73,18 @@
 <!-- LOCALIZATION NOTE (positionMenu.window): When this option is selected the
   -  Web Console interface is displayed in a floating panel. -->
 <!ENTITY positionMenu.window   "Window">
 
 <!ENTITY filterBox.placeholder "Filter">
 <!ENTITY btnClear.label        "Clear">
 <!ENTITY btnClear.tooltip      "Clear the Web Console output">
 <!ENTITY btnClose.tooltip      "Close the Web Console">
+
+<!ENTITY fullZoomEnlargeCmd.commandkey  "+">
+<!ENTITY fullZoomEnlargeCmd.commandkey2 "="> <!-- + is above this key on many keyboards -->
+<!ENTITY fullZoomEnlargeCmd.commandkey3 "">
+
+<!ENTITY fullZoomReduceCmd.commandkey   "-">
+<!ENTITY fullZoomReduceCmd.commandkey2  "">
+
+<!ENTITY fullZoomResetCmd.commandkey    "0">
+<!ENTITY fullZoomResetCmd.commandkey2   "">
diff --git a/browser/themes/gnomestripe/devtools/webconsole.css b/browser/themes/gnomestripe/devtools/webconsole.css
--- a/browser/themes/gnomestripe/devtools/webconsole.css
+++ b/browser/themes/gnomestripe/devtools/webconsole.css
@@ -13,17 +13,17 @@
 }
 
 /* General output styles */
 
 .webconsole-timestamp {
   color: GrayText;
   margin-top: 0;
   margin-bottom: 0;
-  font: 12px "DejaVu Sans Mono", monospace;
+  font-family: "DejaVu Sans Mono", monospace;
 }
 
 .hud-msg-node {
   list-style-image: url(chrome://browser/skin/devtools/webconsole.png);
   -moz-image-region: rect(0, 1px, 0, 0);
 }
 
 .webconsole-msg-icon {
@@ -38,17 +38,17 @@
 }
 
 .webconsole-msg-body {
   margin-top: 0;
   margin-bottom: 3px;
   -moz-margin-start: 3px;
   -moz-margin-end: 6px;
   white-space: pre-wrap;
-  font: 12px "DejaVu Sans Mono", monospace;
+  font-family: "DejaVu Sans Mono", monospace;
 }
 
 .webconsole-msg-body-piece {
   margin: 0;
 }
 
 .webconsole-msg-url {
   margin: 0 6px;
@@ -58,17 +58,17 @@
 .webconsole-msg-repeat {
   margin: 2px 0;
   padding-left: 4px;
   padding-right: 4px;
   color: white;
   background-color: red;
   border-radius: 40px;
   font: message-box;
-  font-size: 10px;
+  font-size: 0.9em;
   font-weight: 600;
 }
 
 /* TODO move this and other functional rules to content - bug 635359 */
 .webconsole-msg-repeat[value="1"] {
   display: none;
 }
 
@@ -91,18 +91,19 @@
 }
 
 .hud-msg-node[selected="true"] > .webconsole-timestamp,
 .hud-msg-node[selected="true"] > .webconsole-location {
   color: inherit;
 }
 
 .jsterm-input-node,
-.jsterm-complete-node {
-  font: 12px "DejaVu Sans Mono", monospace;
+.jsterm-complete-node,
+.hud-output-node {
+  font: 0.85em "DejaVu Sans Mono", monospace;
 }
 
 .hud-output-node {
   -moz-appearance: none;
   border-bottom: 1px solid ThreeDShadow;
   border-top: 1px solid ThreeDShadow;
   margin: 0;
 }
@@ -209,46 +210,16 @@
   -moz-image-region: rect(24px, 48px, 32px, 40px);
 }
 
 .webconsole-close-button {
   list-style-image: url("moz-icon://stock/gtk-close?size=menu");
 }
 
 /* JSTerm Styles */
-
-.jsterm-wrapper-node {
-  font-family: monospace;
-  font-size: 1em;
-  background-color: #000;
-  border: 1px solid #333;
-  padding: 0.1em;
-  width: 100%;
-  height: 400px;
-}
-
-.jsterm-output-node {
-  width: 100%;
-  height: 400px;
-  color: white;
-  background-color: black;
-  overflow: auto;
-  overflow-x: auto;
-  position: absolute;
-  -moz-box-direction: reverse;
-}
-
-.jsterm-scroll-to-node {
-  height: 1px;
-  width: 1px;
-  position: relative;
-  top: 92%;
-  display: block;
-}
-
 .jsterm-input-node,
 .jsterm-complete-node {
   border: none;
   padding: 0 0 0 16px;
   -moz-appearance: none;
 }
 
 .jsterm-input-node {
@@ -259,12 +230,8 @@
 :-moz-any(.jsterm-input-node,
           .jsterm-complete-node) > .textbox-input-box > .textbox-textarea {
   overflow-x: hidden;
 }
 
 .jsterm-complete-node > .textbox-input-box > .textbox-textarea {
   color: GrayText;
 }
-
-.jsterm-output-line {
-  font-size: 1em;
-}
diff --git a/browser/themes/pinstripe/devtools/webconsole.css b/browser/themes/pinstripe/devtools/webconsole.css
--- a/browser/themes/pinstripe/devtools/webconsole.css
+++ b/browser/themes/pinstripe/devtools/webconsole.css
@@ -15,17 +15,17 @@
 }
 
 /* General output styles */
 
 .webconsole-timestamp {
   color: GrayText;
   margin-top: 0;
   margin-bottom: 0;
-  font: 11px Menlo, Monaco, monospace;
+  font-family: Menlo, Monaco, monospace;
 }
 
 .hud-msg-node {
   list-style-image: url(chrome://browser/skin/devtools/webconsole.png);
   -moz-image-region: rect(0, 1px, 0, 0);
 }
 
 .webconsole-msg-icon {
@@ -40,17 +40,17 @@
 }
 
 .webconsole-msg-body {
   margin-top: 0;
   margin-bottom: 3px;
   -moz-margin-start: 3px;
   -moz-margin-end: 6px;
   white-space: pre-wrap;
-  font: 11px Menlo, Monaco, monospace;
+  font-family: Menlo, Monaco, monospace;
 }
 
 .webconsole-msg-body-piece {
   margin: 0;
 }
 
 .webconsole-msg-url {
   margin: 0 6px;
@@ -60,17 +60,17 @@
 .webconsole-msg-repeat {
   margin: 2px 0;
   padding-left: 4px;
   padding-right: 4px;
   color: white;
   background-color: red;
   border-radius: 40px;
   font: message-box;
-  font-size: 10px;
+  font-size: 0.9em;
   font-weight: 600;
 }
 
 /* TODO move this and other functional rules to content - bug 635359 */
 .webconsole-msg-repeat[value="1"] {
   display: none;
 }
 
@@ -84,18 +84,19 @@
 }
 
 .hud-msg-node[selected="true"] > .webconsole-timestamp,
 .hud-msg-node[selected="true"] > .webconsole-location {
   color: inherit;
 }
 
 .jsterm-input-node,
-.jsterm-complete-node {
-  font: 11px Menlo, Monaco, monospace;
+.jsterm-complete-node,
+.hud-output-node {
+  font: 0.85em Menlo, Monaco, monospace;
 }
 
 .hud-output-node {
   -moz-appearance: none;
   border-bottom: 1px solid ThreeDShadow;
   border-top: 1px solid ThreeDShadow;
   margin: 0;
 }
@@ -277,46 +278,16 @@
   -moz-image-region: rect(0, 32px, 16px, 16px);
 }
 
 .webconsole-close-button:hover:active {
   -moz-image-region: rect(0, 48px, 16px, 32px);
 }
 
 /* JSTerm Styles */
-
-.jsterm-wrapper-node {
-  font-family: monospace;
-  font-size: 1em;
-  background-color: #000;
-  border: 1px solid #333;
-  padding: 0.1em;
-  width: 100%;
-  height: 400px;
-}
-
-.jsterm-output-node {
-  width: 100%;
-  height: 400px;
-  color: white;
-  background-color: black;
-  overflow: auto;
-  overflow-x: auto;
-  position: absolute;
-  -moz-box-direction: reverse;
-}
-
-.jsterm-scroll-to-node {
-  height: 1px;
-  width: 1px;
-  position: relative;
-  top: 92%;
-  display: block;
-}
-
 .jsterm-input-container {
   background: white;
 }
 
 .jsterm-input-node,
 .jsterm-complete-node {
   border: none;
   padding: 0 0 0 16px;
@@ -331,20 +302,16 @@
           .jsterm-complete-node) > .textbox-input-box > .textbox-textarea {
   overflow-x: hidden;
 }
 
 .jsterm-complete-node > .textbox-input-box > .textbox-textarea {
   color: GrayText;
 }
 
-.jsterm-output-line {
-  font-size: 1em;
-}
-
 .hud-console-filter-toolbar {
   background: @scopeBarBackground@;
   border-bottom: @scopeBarSeparatorBorder@;
   padding: 0px 1px;
   -moz-appearance: none;
   -moz-box-align: center;
 }
 
diff --git a/browser/themes/winstripe/devtools/webconsole.css b/browser/themes/winstripe/devtools/webconsole.css
--- a/browser/themes/winstripe/devtools/webconsole.css
+++ b/browser/themes/winstripe/devtools/webconsole.css
@@ -13,17 +13,17 @@
 }
 
 /* General output styles */
 
 .webconsole-timestamp {
   color: GrayText;
   margin-top: 0;
   margin-bottom: 0;
-  font: 12px Consolas, Lucida Console, monospace;
+  font-family: Consolas, Lucida Console, monospace;
 }
 
 .hud-msg-node {
   list-style-image: url(chrome://browser/skin/devtools/webconsole.png);
   -moz-image-region: rect(0, 1px, 0, 0);
 }
 
 .webconsole-msg-icon {
@@ -38,17 +38,17 @@
 }
 
 .webconsole-msg-body {
   margin-top: 0;
   margin-bottom: 3px;
   -moz-margin-start: 3px;
   -moz-margin-end: 6px;
   white-space: pre-wrap;
-  font: 12px Consolas, Lucida Console, monospace;
+  font-family: Consolas, Lucida Console, monospace;
 }
 
 .webconsole-msg-body-piece {
   margin: 0;
 }
 
 .webconsole-msg-url {
   margin: 0 6px;
@@ -58,17 +58,17 @@
 .webconsole-msg-repeat {
   margin: 2px 0;
   padding-left: 4px;
   padding-right: 4px;
   color: white;
   background-color: red;
   border-radius: 40px;
   font: message-box;
-  font-size: 10px;
+  font-size: 0.9em;
   font-weight: 600;
 }
 
 /* TODO move this and other functional rules to content - bug 635359 */
 .webconsole-msg-repeat[value="1"] {
   display: none;
 }
 
@@ -82,18 +82,19 @@
 }
 
 .hud-msg-node[selected="true"] > .webconsole-timestamp,
 .hud-msg-node[selected="true"] > .webconsole-location {
   color: inherit;
 }
 
 .jsterm-input-node,
-.jsterm-complete-node {
-  font: 12px Consolas, Lucida Console, monospace;
+.jsterm-complete-node,
+.hud-output-node {
+  font: 0.85em Consolas, Lucida Console, monospace;
 }
 
 .hud-output-node {
   -moz-appearance: none;
   border-bottom: 1px solid ThreeDShadow;
   border-top: 1px solid ThreeDShadow;
   margin: 0;
 }
@@ -227,46 +228,16 @@
   -moz-image-region: rect(0, 32px, 16px, 16px);
 }
 
 .webconsole-close-button:hover:active {
   -moz-image-region: rect(0, 48px, 16px, 32px);
 }
 
 /* JSTerm Styles */
-
-.jsterm-wrapper-node {
-  font-family: monospace;
-  font-size: 1em;
-  background-color: #000;
-  border: 1px solid #333;
-  padding: 0.1em;
-  width: 100%;
-  height: 400px;
-}
-
-.jsterm-output-node {
-  width: 100%;
-  height: 400px;
-  color: white;
-  background-color: black;
-  overflow: auto;
-  overflow-x: auto;
-  position: absolute;
-  -moz-box-direction: reverse;
-}
-
-.jsterm-scroll-to-node {
-  height: 1px;
-  width: 1px;
-  position: relative;
-  top: 92%;
-  display: block;
-}
-
 .jsterm-input-node,
 .jsterm-complete-node {
   border: none;
   padding: 0 0 0 16px;
   -moz-appearance: none;
 }
 
 .jsterm-input-node {
@@ -277,19 +248,15 @@
           .jsterm-complete-node) > .textbox-input-box > .textbox-textarea {
   overflow-x: hidden;
 }
 
 .jsterm-complete-node > .textbox-input-box > .textbox-textarea {
   color: GrayText;
 }
 
-.jsterm-output-line {
-  font-size: 1em;
-}
-
 .hud-console-filter-toolbar {
   padding: 1px 2px;
   -moz-box-align: center;
   -moz-appearance: none;
   background-color: -moz-dialog;
   border-top: none;
 }
