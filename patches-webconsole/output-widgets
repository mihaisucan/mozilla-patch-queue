# HG changeset patch
# Parent 0d2dd13c99138340dc8c6b576ddfefb569fe4d2a
# User Mihai Sucan <mihai.sucan@gmail.com>
# Date 1372798639 -10800

diff --git a/browser/devtools/webconsole/console-output.js b/browser/devtools/webconsole/console-output.js
--- a/browser/devtools/webconsole/console-output.js
+++ b/browser/devtools/webconsole/console-output.js
@@ -164,16 +164,53 @@ Messages.NavigationMarker.prototype = ex
     this.$render().element.firstChild.appendChild(urlnode);
     this.element.classList.add("navigation-marker");
     this.element.url = this._url;
 
     return this;
   },
 }); // Messages.NavigationMarker.prototype
 
+let Widgets = {};
+
+Widgets.BaseWidget = function(message)
+{
+  this.message = message;
+};
+
+Widgets.BaseWidget.prototype = {
+  message: null,
+  element: null,
+  textContent: null,
+
+  render: function()
+  {
+  },
+
+  destroy: function()
+  {
+  },
+};
+
+Widgets.Separator = function(message, text)
+{
+  Widgets.BaseWidget.apply(this, arguments);
+  this.textContent = text;
+};
+
+Widgets.Separator.prototype = extend(Widgets.BaseWidget.prototype, {
+  render: function()
+  {
+    if (!this.element) {
+      this.element = this.message.output.document.createElementNS(XHTML_NS, "hr");
+    }
+
+    return this;
+  },
+});
 
 let Utils = {};
 
 function extend(proto, props)
 {
   let result = Heritage.extend(proto, props);
   for (let key of Object.getOwnPropertyNames(props))
   {
@@ -195,9 +232,10 @@ function extend(proto, props)
 function gSequenceId()
 {
   return gSequenceId.n++;
 }
 gSequenceId.n = 0;
 
 exports.ConsoleOutput = ConsoleOutput;
 exports.Messages = Messages;
+exports.Widgets = Widgets;
 exports.Utils = Utils;
