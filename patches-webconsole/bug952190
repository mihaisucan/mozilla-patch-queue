# HG changeset patch
# Parent 6e3ec93efe1d4154cb3e12d999b4730bac0b93bf
# User Mihai Sucan <mihai.sucan@gmail.com>
# Date 1392745641 -7200

Bug 952190 - Pretty output for native objects from chrome windows; r=past; try: -b do -p linux,linux64,macosx64,win32,win64 -u xpcshell,mochitest-o,mochitest-bc -t none

diff --git a/browser/devtools/webconsole/test/browser_console_consolejsm_output.js b/browser/devtools/webconsole/test/browser_console_consolejsm_output.js
--- a/browser/devtools/webconsole/test/browser_console_consolejsm_output.js
+++ b/browser/devtools/webconsole/test/browser_console_consolejsm_output.js
@@ -86,17 +86,17 @@ function test()
           name: "console.trace output",
           consoleTrace: {
             file: "browser_console_consolejsm_output.js",
             fn: "onCachedMessage",
           },
         },
         {
           name: "console.dir output",
-          consoleDir: "XULDocument {",
+          consoleDir: /XULDocument .+ chrome:\/\/.+\/browser\.xul/,
         },
         {
           name: "console.time output",
           consoleTime: "foobarTimer",
         },
         {
           name: "console.timeEnd output",
           consoleTimeEnd: "foobarTimer",
diff --git a/toolkit/devtools/DevToolsUtils.js b/toolkit/devtools/DevToolsUtils.js
--- a/toolkit/devtools/DevToolsUtils.js
+++ b/toolkit/devtools/DevToolsUtils.js
@@ -255,11 +255,16 @@ this.hasSafeGetter = function hasSafeGet
  *         True if it is safe to read properties from aObj, or false otherwise.
  */
 this.isSafeJSObject = function isSafeJSObject(aObj) {
   if (Cu.getGlobalForObject(aObj) ==
       Cu.getGlobalForObject(isSafeJSObject)) {
     return true; // aObj is not a cross-compartment wrapper.
   }
 
+  let principal = Services.scriptSecurityManager.getObjectPrincipal(aObj);
+  if (Services.scriptSecurityManager.isSystemPrincipal(principal)) {
+    return true; // allow chrome objects
+  }
+
   return Cu.isXrayWrapper(aObj);
 };
 
