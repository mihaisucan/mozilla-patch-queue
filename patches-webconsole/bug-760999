# HG changeset patch
# User Mihai Sucan <mihai.sucan@gmail.com>
# Date 1338828310 -10800
# Node ID cf9a24317923a0d851ff33a1af55b7582b094c93
# Parent  c0255fe22a09cae4ef4f83c219dce36aeab366f5
Bug 760999 - Intermittent browser_webconsole_netlogging.js | TypeError: content.wrappedJSObject.testXhrGet is not a function

diff --git a/browser/devtools/webconsole/test/browser_webconsole_bug_632817.js b/browser/devtools/webconsole/test/browser_webconsole_bug_632817.js
--- a/browser/devtools/webconsole/test/browser_webconsole_bug_632817.js
+++ b/browser/devtools/webconsole/test/browser_webconsole_bug_632817.js
@@ -49,24 +49,40 @@ function testPageLoad()
     executeSoon(testPageLoadBody);
   };
 
   content.location = TEST_NETWORK_REQUEST_URI;
 }
 
 function testPageLoadBody()
 {
+  let loaded = false;
+  let requestCallbackInvoked = false;
+
   // Turn off logging of request bodies and check again.
   requestCallback = function() {
     ok(lastRequest, "Page load was logged again");
     lastRequest = null;
     requestCallback = null;
-    executeSoon(testXhrGet);
+    requestCallbackInvoked = true;
+
+    if (loaded) {
+      executeSoon(testXhrGet);
+    }
   };
 
+  browser.addEventListener("load", function onLoad() {
+    browser.removeEventListener("load", onLoad, true);
+    loaded = true;
+
+    if (requestCallbackInvoked) {
+      executeSoon(testXhrGet);
+    }
+  }, true);
+
   content.location.reload();
 }
 
 function testXhrGet()
 {
   requestCallback = function() {
     ok(lastRequest, "testXhrGet() was logged");
     is(lastRequest.request.method, "GET", "Method is correct");
diff --git a/browser/devtools/webconsole/test/browser_webconsole_netlogging.js b/browser/devtools/webconsole/test/browser_webconsole_netlogging.js
--- a/browser/devtools/webconsole/test/browser_webconsole_netlogging.js
+++ b/browser/devtools/webconsole/test/browser_webconsole_netlogging.js
@@ -63,28 +63,44 @@ function testPageLoad()
     executeSoon(testPageLoadBody);
   };
 
   content.location = TEST_NETWORK_REQUEST_URI;
 }
 
 function testPageLoadBody()
 {
+  let loaded = false;
+  let requestCallbackInvoked = false;
+
   // Turn on logging of request bodies and check again.
   hud.saveRequestAndResponseBodies = true;
   requestCallback = function() {
     ok(lastRequest, "Page load was logged again");
     is(lastRequest.response.content.text.indexOf("<!DOCTYPE HTML>"), 0,
       "Response body's beginning is okay");
 
     lastRequest = null;
     requestCallback = null;
-    executeSoon(testXhrGet);
+    requestCallbackInvoked = true;
+
+    if (loaded) {
+      executeSoon(testXhrGet);
+    }
   };
 
+  browser.addEventListener("load", function onLoad() {
+    browser.removeEventListener("load", onLoad, true);
+    loaded = true;
+
+    if (requestCallbackInvoked) {
+      executeSoon(testXhrGet);
+    }
+  }, true);
+
   content.location.reload();
 }
 
 function testXhrGet()
 {
   requestCallback = function() {
     ok(lastRequest, "testXhrGet() was logged");
     is(lastRequest.request.method, "GET", "Method is correct");
