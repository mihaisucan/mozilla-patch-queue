# HG changeset patch
# Parent 13c4b1ff5564d40cb13c1c06b5edb71627693c5d
# User Mihai Sucan <mihai.sucan@gmail.com>
# Date 1365079271 -10800

Bug 809424 - Fix for intermittent browser_webconsole_bug_611795.js | The unknown CSS property warning is displayed only once - Got 1, expected 2; r=vporof; try: -b do -p linux,linux64,macosx64,win32,win64 -u mochitest-bc -t none

diff --git a/browser/devtools/webconsole/test/browser_webconsole_bug_611795.js b/browser/devtools/webconsole/test/browser_webconsole_bug_611795.js
--- a/browser/devtools/webconsole/test/browser_webconsole_bug_611795.js
+++ b/browser/devtools/webconsole/test/browser_webconsole_bug_611795.js
@@ -9,34 +9,46 @@ function onContentLoaded()
 {
   browser.removeEventListener("load", onContentLoaded, true);
 
   let HUD = HUDService.getHudByWindow(content);
   let jsterm = HUD.jsterm;
   let outputNode = HUD.outputNode;
 
   let cssWarning = "Unknown property '-moz-opacity'.  Declaration dropped.";
+  let textFound = false;
+  let repeats = 0;
+
+  function displayResults()
+  {
+    ok(textFound, "css warning was found");
+    is(repeats, 2, "The unknown CSS property warning is displayed only once");
+  }
 
   waitForSuccess({
     name: "2 repeated CSS warnings",
-    validatorFn: function()
-    {
-      return outputNode.textContent.indexOf(cssWarning) > -1;
+    validatorFn: () => {
+      let node = outputNode.querySelector(".webconsole-msg-cssparser");
+      if (!node) {
+        return false;
+      }
+
+      textFound = node.textContent.indexOf(cssWarning) > -1;
+      repeats = node.querySelector(".webconsole-msg-repeat")
+                .getAttribute("value");
+      return textFound && repeats == 2;
     },
-    successFn: function()
-    {
-      let msg = "The unknown CSS property warning is displayed only once";
-      let node = outputNode.firstChild;
-
-      is(node.childNodes[2].textContent, cssWarning, "correct node");
-      is(node.childNodes[3].firstChild.getAttribute("value"), 2, msg);
-
+    successFn: () => {
+      displayResults();
       testConsoleLogRepeats();
     },
-    failureFn: finishTest,
+    failureFn: () => {
+      displayResults();
+      finishTest();
+    },
   });
 }
 
 function testConsoleLogRepeats()
 {
   let HUD = HUDService.getHudByWindow(content);
   let jsterm = HUD.jsterm;
   let outputNode = HUD.outputNode;
