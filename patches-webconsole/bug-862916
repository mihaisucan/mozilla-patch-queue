# HG changeset patch
# Parent 2e26df7512495878536baa258d42d64e6ed31177
# User Mihai Sucan <mihai.sucan@gmail.com>
# Date 1367520410 -10800

Bug 862916 - console.dir() shows blank box if Logging filter is off; r=past try: -b do -p linux,linux64,macosx64,win32,win64 -u mochitest-bc -t none

diff --git a/browser/devtools/webconsole/test/Makefile.in b/browser/devtools/webconsole/test/Makefile.in
--- a/browser/devtools/webconsole/test/Makefile.in
+++ b/browser/devtools/webconsole/test/Makefile.in
@@ -120,16 +120,17 @@ MOCHITEST_BROWSER_FILES = \
 	browser_console_variables_view.js \
 	browser_console_variables_view_while_debugging.js \
 	browser_console.js \
 	browser_longstring_hang.js \
 	browser_console_consolejsm_output.js \
 	browser_webconsole_bug_837351_securityerrors.js \
 	browser_bug_865871_variables_view_close_on_esc_key.js \
 	browser_bug_865288_repeat_different_objects.js \
+	browser_bug_862916_console_dir_and_filter_off.js \
 	head.js \
 	$(NULL)
 
 ifeq ($(OS_ARCH), Darwin)
 MOCHITEST_BROWSER_FILES += \
 	browser_webconsole_bug_804845_ctrl_key_nav.js \
         $(NULL)
 endif
diff --git a/browser/devtools/webconsole/test/browser_bug_862916_console_dir_and_filter_off.js b/browser/devtools/webconsole/test/browser_bug_862916_console_dir_and_filter_off.js
new file mode 100644
--- /dev/null
+++ b/browser/devtools/webconsole/test/browser_bug_862916_console_dir_and_filter_off.js
@@ -0,0 +1,34 @@
+/*
+ * Any copyright is dedicated to the Public Domain.
+ * http://creativecommons.org/publicdomain/zero/1.0/
+ */
+
+// Check that the output for console.dir() works even if Logging filter is off.
+
+const TEST_URI = "data:text/html;charset=utf8,<p>test for bug 862916";
+
+function test()
+{
+  addTab(TEST_URI);
+  browser.addEventListener("load", function onLoad() {
+    browser.removeEventListener("load", onLoad, true);
+    openConsole(null, consoleOpened);
+  }, true);
+}
+
+function consoleOpened(hud)
+{
+  ok(hud, "web console opened");
+
+  hud.setFilterState("log", false);
+  registerCleanupFunction(() => hud.setFilterState("log", true));
+
+  content.wrappedJSObject.fooBarz = "bug862916";
+  hud.jsterm.execute("console.dir(window)");
+  hud.jsterm.once("variablesview-fetched", (aEvent, aVar) => {
+    ok(aVar, "variables view object");
+    findVariableViewProperties(aVar, [
+      { name: "fooBarz", value: "bug862916" },
+    ], { webconsole: hud }).then(finishTest);
+  });
+}
diff --git a/browser/devtools/webconsole/webconsole.js b/browser/devtools/webconsole/webconsole.js
--- a/browser/devtools/webconsole/webconsole.js
+++ b/browser/devtools/webconsole/webconsole.js
@@ -852,16 +852,20 @@ WebConsoleFrame.prototype = {
     let text = aNode.clipboardText;
 
     // if string matches the filter text
     if (!this.stringMatchesFilters(text, search)) {
       aNode.classList.add("hud-filtered-by-string");
       isFiltered = true;
     }
 
+    if (isFiltered && aNode.classList.contains("webconsole-msg-inspector")) {
+      aNode.classList.add("hidden-message");
+    }
+
     return isFiltered;
   },
 
   /**
    * Merge the attributes of the two nodes that are about to be filtered.
    * Increment the number of repeats of aOriginal.
    *
    * @param nsIDOMNode aOriginal
@@ -2169,18 +2173,22 @@ WebConsoleFrame.prototype = {
       viewContainer.height = this.outputNode.clientHeight *
                              CONSOLE_DIR_VIEW_HEIGHT;
 
       let options = {
         objectActor: body.arguments[0],
         targetElement: viewContainer,
         hideFilterInput: true,
       };
-      this.jsterm.openVariablesView(options)
-        .then((aView) => node._variablesView = aView);
+      this.jsterm.openVariablesView(options).then((aView) => {
+        node._variablesView = aView;
+        if (node.classList.contains("hidden-message")) {
+          node.classList.remove("hidden-message");
+        }
+      });
 
       let bodyContainer = this.document.createElement("vbox");
       bodyContainer.flex = 1;
       bodyContainer.appendChild(bodyNode);
       bodyContainer.appendChild(viewContainer);
       node.appendChild(bodyContainer);
       node.classList.add("webconsole-msg-inspector");
     }
@@ -3034,18 +3042,19 @@ JSTerm.prototype = {
         if (!aOptions.targetElement) {
           this._variablesView = view;
           aWindow.addEventListener("keypress", this._onKeypressInVariablesView);
         }
       }
       aOptions.view = view;
       this._updateVariablesView(aOptions);
 
-      this.sidebar.show();
-      aOptions.autofocus && aWindow.focus();
+      if (!aOptions.targetElement && aOptions.autofocus) {
+        aWindow.focus();
+      }
 
       this.emit("variablesview-open", view, aOptions);
       return view;
     };
 
     let promise;
     if (aOptions.targetElement) {
       let deferred = Promise.defer();
diff --git a/browser/themes/linux/devtools/webconsole.css b/browser/themes/linux/devtools/webconsole.css
--- a/browser/themes/linux/devtools/webconsole.css
+++ b/browser/themes/linux/devtools/webconsole.css
@@ -97,16 +97,23 @@
   font-size: 0.9em;
 }
 
 .hud-filtered-by-type,
 .hud-filtered-by-string {
   display: none;
 }
 
+.hidden-message {
+  display: block;
+  visibility: hidden;
+  height: 0;
+  overflow: hidden;
+}
+
 /* WebConsole colored drops */
 
 .webconsole-filter-button[checked] {
   color: white !important;
 }
 
 .webconsole-filter-button > .toolbarbutton-menubutton-button:before {
   content: "";
diff --git a/browser/themes/osx/devtools/webconsole.css b/browser/themes/osx/devtools/webconsole.css
--- a/browser/themes/osx/devtools/webconsole.css
+++ b/browser/themes/osx/devtools/webconsole.css
@@ -89,16 +89,23 @@
   margin: 0;
 }
 
 .hud-filtered-by-type,
 .hud-filtered-by-string {
   display: none;
 }
 
+.hidden-message {
+  display: block;
+  visibility: hidden;
+  height: 0;
+  overflow: hidden;
+}
+
 /* WebConsole colored drops */
 
 .webconsole-filter-button[checked] {
   color: white !important;
 }
 
 .webconsole-filter-button > .toolbarbutton-menubutton-button:before {
   content: "";
diff --git a/browser/themes/windows/devtools/webconsole.css b/browser/themes/windows/devtools/webconsole.css
--- a/browser/themes/windows/devtools/webconsole.css
+++ b/browser/themes/windows/devtools/webconsole.css
@@ -87,16 +87,23 @@
   margin: 0;
 }
 
 .hud-filtered-by-type,
 .hud-filtered-by-string {
   display: none;
 }
 
+.hidden-message {
+  display: block;
+  visibility: hidden;
+  height: 0;
+  overflow: hidden;
+}
+
 /* WebConsole colored drops */
 
 .webconsole-filter-button[checked] {
   color: white !important;
 }
 
 .webconsole-filter-button > .toolbarbutton-menubutton-button:before {
   content: "";
