# HG changeset patch
# Parent 504463b790726f528542204ede33c4cbd35f9232
# User Mihai Sucan <mihai.sucan@gmail.com>
# Date 1389987969 -7200

Bug 961097 - Very janky regular expression introduced in bug 923856; r=bz

diff --git a/toolkit/devtools/webconsole/network-helper.js b/toolkit/devtools/webconsole/network-helper.js
--- a/toolkit/devtools/webconsole/network-helper.js
+++ b/toolkit/devtools/webconsole/network-helper.js
@@ -419,19 +419,19 @@ let NetworkHelper = {
   isTextMimeType: function NH_isTextMimeType(aMimeType)
   {
     if (aMimeType.indexOf("text/") == 0) {
       return true;
     }
 
     // XML and JSON often come with custom MIME types, so in addition to the
     // standard "application/xml" and "application/json", we also look for
-    // variants like "application/x-bigcorp-xml" by checking for either string
-    // after any word boundary.
-    if (/^application\/(\w+[\.-]?)+\+(xml|json)/.test(aMimeType)) {
+    // variants like "application/x-bigcorp+xml". For JSON we allow "+json" and
+    // "-json" as suffixes.
+    if (/^application\/\w+(?:[\.-]\w+)*(?:\+xml|[-+]json)$/.test(aMimeType)) {
       return true;
     }
 
     let category = this.mimeCategoryMap[aMimeType] || null;
     switch (category) {
       case "txt":
       case "js":
       case "json":
diff --git a/toolkit/devtools/webconsole/test/unit/test_network_helper.js b/toolkit/devtools/webconsole/test/unit/test_network_helper.js
--- a/toolkit/devtools/webconsole/test/unit/test_network_helper.js
+++ b/toolkit/devtools/webconsole/test/unit/test_network_helper.js
@@ -24,15 +24,24 @@ function test_isTextMimeType () {
   do_check_eq(NetworkHelper.isTextMimeType("application/json"), true);
   do_check_eq(NetworkHelper.isTextMimeType("text/css"), true);
   do_check_eq(NetworkHelper.isTextMimeType("text/html"), true);
   do_check_eq(NetworkHelper.isTextMimeType("image/svg+xml"), true);
   do_check_eq(NetworkHelper.isTextMimeType("application/xml"), true);
 
   // Test custom JSON subtype
   do_check_eq(NetworkHelper.isTextMimeType("application/vnd.tent.posts-feed.v0+json"), true);
+  do_check_eq(NetworkHelper.isTextMimeType("application/vnd.tent.posts-feed.v0-json"), true);
   // Test custom XML subtype
   do_check_eq(NetworkHelper.isTextMimeType("application/vnd.tent.posts-feed.v0+xml"), true);
+  do_check_eq(NetworkHelper.isTextMimeType("application/vnd.tent.posts-feed.v0-xml"), false);
   // Test case-insensitive
   do_check_eq(NetworkHelper.isTextMimeType("application/vnd.BIG-CORP+json"), true);
   // Test non-text type
   do_check_eq(NetworkHelper.isTextMimeType("image/png"), false);
+  // Test invalid types
+  do_check_eq(NetworkHelper.isTextMimeType("application/foo-+json"), false);
+  do_check_eq(NetworkHelper.isTextMimeType("application/-foo+json"), false);
+  do_check_eq(NetworkHelper.isTextMimeType("application/foo--bar+json"), false);
+
+  // Test we do not cause internal errors with unoptimized regex. Bug 961097
+  do_check_eq(NetworkHelper.isTextMimeType("application/vnd.google.safebrowsing-chunk"), false);
 }
