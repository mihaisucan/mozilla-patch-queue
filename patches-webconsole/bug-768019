# HG changeset patch
# Parent cb2904476d146bce98091f77d1246350d673afca
# User Mihai Sucan <mihai.sucan@gmail.com>
# Date 1340644693 -10800

Bug 768019 - Cached CSS warnings are displayed as JavaScript warnings on Web Console open

diff --git a/browser/devtools/webconsole/HUDService.jsm b/browser/devtools/webconsole/HUDService.jsm
--- a/browser/devtools/webconsole/HUDService.jsm
+++ b/browser/devtools/webconsole/HUDService.jsm
@@ -1421,17 +1421,17 @@ HeadsUpDisplay.prototype = {
   {
     if (!aRemoteMessages.length) {
       return;
     }
 
     aRemoteMessages.forEach(function(aMessage) {
       switch (aMessage._type) {
         case "PageError": {
-          let category = this.categoryForScriptError(aMessage.category);
+          let category = this.categoryForScriptError(aMessage);
           this.outputMessage(category, this.reportPageError,
                              [category, aMessage]);
           break;
         }
         case "ConsoleAPI":
           this.outputMessage(CATEGORY_WEBDEV, this.logConsoleAPIMessage,
                              [aMessage]);
           break;
diff --git a/browser/devtools/webconsole/test/browser_cached_messages.js b/browser/devtools/webconsole/test/browser_cached_messages.js
--- a/browser/devtools/webconsole/test/browser_cached_messages.js
+++ b/browser/devtools/webconsole/test/browser_cached_messages.js
@@ -46,16 +46,22 @@ function testOpenUI(aTestReopen)
             }
           }
           foundAll = foundAll && found;
         }
         return foundAll;
       },
       successFn: function()
       {
+        // Make sure the CSS warning is given the correct category - bug 768019.
+        let cssNode = hud.outputNode.querySelector(".webconsole-msg-cssparser");
+        ok(cssNode, "CSS warning message element");
+        isnot(cssNode.textContent.indexOf("cssColorBug611032"), -1,
+              "CSS warning message element content is correct");
+
         closeConsole(gBrowser.selectedTab, function() {
           aTestReopen && info("will reopen the Web Console");
           executeSoon(aTestReopen ? testOpenUI : finishTest);
         });
       },
       failureFn: function()
       {
         for (let msg in messages) {
