# HG changeset patch
# Parent d9d61d199b11bebc4b26e52c00e7b998bd47d889
# User Mihai Sucan <mihai.sucan@gmail.com>
# Date 1341263041 -10800

Bug 769575 - GCLI needs page manipulation commands

diff --git a/browser/devtools/commandline/GcliCommands.jsm b/browser/devtools/commandline/GcliCommands.jsm
--- a/browser/devtools/commandline/GcliCommands.jsm
+++ b/browser/devtools/commandline/GcliCommands.jsm
@@ -537,8 +537,147 @@ gcli.addCommand({
       });
     } catch (ex) {
       // If the debugger has been closed already, don't scare the user.
       promise.resolve(gcli.lookup("breakdelRemoved"));
     }
     return promise;
   }
 });
+
+/**
+ * 'export' command
+ */
+gcli.addCommand({
+  name: "export",
+  description: gcli.lookup("exportDesc"),
+});
+
+/**
+ * The 'export html' command. This command allows the user to export the page to
+ * HTML after they do DOM changes.
+ */
+gcli.addCommand({
+  name: "export html",
+  description: gcli.lookup("exporthtmlDesc"),
+  exec: function(args, context) {
+    let document = context.environment.contentDocument;
+    let window = document.defaultView;
+    let page = document.documentElement.outerHTML;
+    window.open('data:text/plain;charset=utf8,' + encodeURIComponent(page));
+  }
+});
+
+/**
+ * 'pagemod' command
+ */
+gcli.addCommand({
+  name: "pagemod",
+  description: gcli.lookup("pagemodDesc"),
+});
+
+/**
+ * The 'pagemod replace' command. This command allows the user to search and
+ * replace within text nodes and attributes.
+ */
+gcli.addCommand({
+  name: "pagemod replace",
+  description: gcli.lookup("pagemodreplaceDesc"),
+  params: [
+    {
+      name: 'search',
+      type: 'string',
+      description: 'What to search for',
+    },
+    {
+      name: 'replace',
+      type: 'string',
+      description: 'What you want to put instead of the given search string',
+    },
+    {
+      name: 'regex',
+      type: 'boolean',
+      description: 'Tells if the search string is a regex',
+    },
+    {
+      name: 'ignoreCase',
+      type: 'boolean',
+      description: 'Tells if you want to ignore the case of the search string',
+    },
+    {
+      name: 'root',
+      type: 'node',
+      description: 'A CSS selector pointing to the root element from where the search starts',
+      defaultValue: null,
+    },
+    {
+      name: 'selector',
+      type: 'string',
+      description: 'CSS selector that tells which elements you want to include in the search and replace operation',
+      defaultValue: '*:not(script):not(style):not(embed):not(object):not(frame):not(iframe):not(frameset)',
+    },
+    {
+      name: 'attributes',
+      type: 'string',
+      description: 'Limit the search to specific attribute names that match the string (or regex) you give here',
+      defaultValue: null,
+    },
+  ],
+  exec: function(args, context) {
+    var document = context.environment.contentDocument;
+
+    function escapeRegex(str) {
+      return str.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
+    }
+
+    var search = args.regex ? args.search : escapeRegex(args.search);
+    var regexOptions = args.ignoreCase ? 'ig' : 'g';
+    search = new RegExp(search, regexOptions);
+
+    var root = args.root || document;
+    var elements = root.querySelectorAll(args.selector);
+    elements = Array.prototype.slice.call(elements);
+    elements.push(root);
+    for (var i = 0; i < elements.length; i++) {
+      var element = elements[i];
+      for (var y = 0; y < element.childNodes.length; y++) {
+        var node = element.childNodes[y];
+        if (node.nodeType == node.TEXT_NODE) {
+          node.textContent = node.textContent.replace(search, args.replace);
+        }
+      }
+    }
+
+    //...
+    var document = context.environment.contentDocument;
+
+    function escapeRegex(str) {
+      return str.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&");
+    }
+
+    var regexOptions = args.ignoreCase ? 'ig' : 'g';
+    var attributeRegex = null;
+    if (args.attributes) {
+      attributeRegex = args.regex ? args.attributes : escapeRegex(args.attributes);
+      attributeRegex = new RegExp(attributeRegex, regexOptions);
+    }
+
+    var search = args.regex ? args.search : escapeRegex(args.search);
+    search = new RegExp(search, regexOptions);
+
+    var root = args.root || document;
+    var elements = root.querySelectorAll(args.selector);
+    elements = Array.prototype.slice.call(elements);
+    elements.push(root);
+    for (var i = 0; i < elements.length; i++) {
+      var element = elements[i];
+      if (!element.attributes) {
+        continue;
+      }
+      for (var y = 0; y < element.attributes.length; y++) {
+        var attr = element.attributes[y];
+        if (!attributeRegex || attributeRegex.test(attr.name)) {
+          attr.value = attr.value.replace(search, args.replace);
+        }
+      }
+    }
+  }
+});
diff --git a/browser/locales/en-US/chrome/browser/devtools/gclicommands.properties b/browser/locales/en-US/chrome/browser/devtools/gclicommands.properties
--- a/browser/locales/en-US/chrome/browser/devtools/gclicommands.properties
+++ b/browser/locales/en-US/chrome/browser/devtools/gclicommands.properties
@@ -337,8 +337,18 @@ editLineToJumpToDesc=Line to jump to
 # command. This string is designed to be shown in a menu alongside the command
 # name, which is why it should be as short as possible.
 cmdDesc=Manipulate the commands
 
 # LOCALIZATION NOTE (cmdRefreshDesc) A very short description of the 'cmd refresh'
 # command. This string is designed to be shown in a menu alongside the command
 # name, which is why it should be as short as possible.
 cmdRefreshDesc=Re-read mozcmd directory
+
+# LOCALIZATION NOTE (exportDesc) A very short description of the 'export'
+# command. This string is designed to be shown in a menu alongside the command
+# name, which is why it should be as short as possible.
+exportDesc=Export resources
+
+# LOCALIZATION NOTE (exporthtmlDesc) A very short description of the 'export
+# html' command. This string is designed to be shown in a menu alongside the
+# command name, which is why it should be as short as possible.
+exporthtmlDesc=Export the current page to HTML
